services:
  derp:
    image: janhouse/tailscaled-derper
    build:
      dockerfile: ./Dockerfile
      context: ./
    restart: unless-stopped
    volumes:
      - ${DOCKER_DATA}/headscale/certs/${DOMAIN_NAME}/fullchain.pem:/app/certs/${DOMAIN_NAME}.crt
      - ${DOCKER_DATA}/headscale/certs/${DOMAIN_NAME}/privkey.pem:/app/certs/${DOMAIN_NAME}.key
      - /dev/net/tun:/dev/net/tun
      - ${DOCKER_DATA}/headscale/derp-data:/var/lib/tailscale
    cap_add:
      - net_admin
    ports:
      #- "0.0.0.0:36541:443"
      - "0.0.0.0:3478:3478/udp"
    environment:
      DERP_CERT_MODE: "manual"
      DERP_DOMAIN: "${DOMAIN_NAME}"
      DERP_VERIFY_CLIENTS: "true"
      DERP_HTTP_PORT: -1
    labels:
      traefik.enable: true

      traefik.http.routers.derp.rule: Host(`${DOMAIN_NAME}`)
      traefik.http.routers.derp.entrypoints: web
      traefik.http.services.derp.loadbalancer.server.port: 443
      traefik.http.routers.derp.service: derp

      traefik.tcp.routers.derp-tcp.rule: HostSNI(`${DOMAIN_NAME}`)
      traefik.tcp.services.derp-tcp.loadBalancer.serversTransport: insecure-tcp@file
      traefik.tcp.services.derp-tcp.loadBalancer.server.port: 443
      traefik.tcp.routers.derp-tcp.entrypoints: websecure
      traefik.tcp.routers.derp-tcp.tls.passthrough: true
      traefik.tcp.routers.derp-tcp.service: derp-tcp

  traefik-ssl-certificate-exporter:
    image: rafi0101/traefik-ssl-certificate-exporter:latest
    environment:
      CRON_TIME: "* * * * *"
      CERT_OWNER_ID: "0"
      CERT_GROUP_ID: "0"
    volumes:
      - ${DOCKER_DATA}/traefik-auth/acme/acme.json:/app/traefik/acme.json
      - ${DOCKER_DATA}/headscale/certs:/app/certs
    restart: unless-stopped
    network_mode: none


